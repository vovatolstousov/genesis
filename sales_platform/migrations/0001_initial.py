# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-12-02 09:33
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_number', models.TextField(blank=True, max_length=15)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='photo/profile_photo', verbose_name='profile_photo')),
                ('role', models.IntegerField(choices=[(0, 'buyer'), (1, 'seller')], default=0)),
                ('failed_log', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now_add=True)),
                ('gender', models.IntegerField(choices=[(0, 'male'), (1, 'female'), (2, 'different')], default=2)),
                ('online', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'CustomUsers',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'CartItem',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('icon', models.ImageField(blank=True, null=True, upload_to='photo/merchandise/category/icons', verbose_name='category_icon')),
                ('image', models.ImageField(blank=True, null=True, upload_to='photo/merchandise/category/images', verbose_name='category_image')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100)),
                ('industry', models.TextField(blank=True, max_length=50)),
                ('country', models.TextField(blank=True, max_length=60)),
                ('country_code', models.CharField(blank=True, max_length=5)),
                ('city', models.TextField(blank=True, max_length=60)),
                ('post_code', models.TextField(blank=True, max_length=10)),
                ('contact_number', models.TextField(blank=True, max_length=20)),
                ('fax_number', models.TextField(blank=True, max_length=30)),
                ('enquiry_email', models.TextField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField()),
                ('text', models.TextField(max_length=1000)),
            ],
            options={
                'verbose_name_plural': 'Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='Marker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lon', models.FloatField()),
            ],
            options={
                'verbose_name_plural': 'Markers',
            },
        ),
        migrations.CreateModel(
            name='MarkerAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField()),
                ('country_code', models.CharField(blank=True, max_length=5)),
                ('city', models.TextField()),
                ('marker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Marker')),
            ],
            options={
                'verbose_name_plural': 'MarkerAddress',
            },
        ),
        migrations.CreateModel(
            name='Merchandise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_created=True)),
                ('name', models.TextField()),
                ('preview_photo', models.ImageField(blank=True, null=True, upload_to='photo/merchandise/preview_photo', verbose_name='merch_preview_photo')),
                ('description', models.TextField(blank=True)),
                ('merchandise', models.IntegerField(choices=[(0, 'product'), (1, 'service')], default=0)),
                ('price', models.FloatField()),
                ('count', models.PositiveIntegerField(default=0)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Category')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Merchandises',
            },
        ),
        migrations.CreateModel(
            name='MerchPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_source_min', models.ImageField(blank=True, null=True, upload_to='photo/merchandise/merchandise_photo/min', verbose_name='merch_photo_source_min')),
                ('photo_source_max', models.ImageField(blank=True, null=True, upload_to='photo/merchandise/merchandise_photo/max', verbose_name='merch_photo_source_max')),
                ('merchandise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Merchandise')),
            ],
            options={
                'verbose_name_plural': 'Photo',
            },
        ),
        migrations.CreateModel(
            name='MerchTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Merchandise')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_email', models.EmailField(max_length=254)),
                ('status', models.IntegerField(choices=[(0, 'unpaid'), (1, 'processing'), (2, 'sent'), (3, 'confirmed')], default=0)),
                ('create_order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('full_price', models.FloatField(default=0)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_order', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_order', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=250)),
                ('price', models.FloatField()),
                ('merch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merch', to='sales_platform.Merchandise')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Order')),
            ],
            options={
                'verbose_name_plural': 'OrderItems',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField()),
                ('merch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Merchandise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Ratings',
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google', models.IntegerField(blank=True, null=True)),
                ('facebook', models.IntegerField(blank=True, null=True)),
                ('twitter', models.IntegerField(blank=True, null=True)),
                ('instagram', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'SocialNetworks',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Category')),
            ],
            options={
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.TextField(max_length=60)),
                ('country_code', models.CharField(blank=True, max_length=5)),
                ('city', models.TextField(blank=True, max_length=60)),
                ('street', models.TextField(blank=True, max_length=60)),
                ('post_code', models.TextField(blank=True, max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'UserAddress',
            },
        ),
        migrations.AddField(
            model_name='merchtag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Tag'),
        ),
        migrations.AddField(
            model_name='merchandise',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Type'),
        ),
        migrations.AddField(
            model_name='marker',
            name='merch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Merchandise'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='merch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Merchandise'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='merch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.Merchandise'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_cart', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_cart', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='sn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales_platform.SocialNetwork'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
