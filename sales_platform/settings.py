"""
Django settings for sales_platform project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c#c5g9mnp1+a+pt$!j3d(5@_j6@-96!m%+ut(r4*00sl(hwq*h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'sales_platform',
    'sales_platform.core',
    'sales_platform.api',
    'sales_platform.core.users',
    'sales_platform.core.merchandise',
    'sales_platform.core.orders',
    'raven.contrib.django.raven_compat'
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        ),
    'DEFAULT_RENDERER_CLASSES': ('rest_framework.renderers.JSONRenderer',),
    'PAGINATE_BY': 10,
    'PAGE-SIZE': 10,
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    # 'PAGE_SIZE': 2
}

MIDDLEWARE_CLASSES = [
    'raven.contrib.django.raven_compat.middleware.Sentry404CatchMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'sales_platform.middleware.UserActivityLoggerMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sales_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sales_platform.wsgi.application'

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.environ.get('GENESIS_DATABASE_NAME', 'Genesis'),
#         'USER': os.environ.get('GENESIS_DATABASE_USER', 'root'),
#         'PASSWORD': os.environ.get('GENESIS_DATABASE_PASSWORD', 'incode2015'),
#         'HOST': os.environ.get('GENESIS_DATABASE_HOST', 'localhost'),
#         'PORT': os.environ.get('GENESIS_DATABASE_PORT', '3306'),
#         'OPTIONS': {
#             'init_command': 'SET NAMES "utf8"; SET character_set_connection="utf8";'
#         }
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'mydatabase',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

AUTHENTICATION_BACKENDS = (
     'django.contrib.auth.backends.ModelBackend',
)

AUTH_USER_MODEL = 'sales_platform.CustomUser'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media_root")

BROKER_URL = 'amqp://' + os.environ.get('RABBITMQ_DEFAULT_USER', 'guest') + ':' + \
             os.environ.get('RABBITMQ_DEFAULT_PASS', 'guest') + '@' + \
             os.environ.get('RABBITMQ_BROKER_HOST', 'localhost')

CELERY_RESULT_BACKEND = 'amqp://'
CELERYD_POOL_RESTARTS = True  # Required for /worker/pool/restart API
CELERY_IMPORTS = ("tasks",)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            # 'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'genesis.log',
            'formatter': 'verbose'
        },
        'console': {
            'class': 'logging.StreamHandler',
        },
        'sentry': {
            'class': 'raven.contrib.django.raven_compat.handlers.SentryHandler',
        },
        'celery': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': 'genesis_celery.log',
            'formatter': 'verbose',
            'maxBytes': 1024 * 1024 * 100,
        }
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['file', 'console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'sales_platform': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
        },
        'sentry': {
            'handlers': ['sentry'],
            'level': 'ERROR',
        },
        'celery': {
            'handlers': ['celery'],
            'level': 'INFO',
        }
    },
}

# PayPal settings

PAYPAL_CLIENT_ID = 'ActFRK7vu8z_aQ5DofIpHrbe8KjY5Ix8FqUMW8dPh4WnD_4VTB36ejjuIhOKSVK8YpxkQDCkhMfxtgSL'
PAYPAL_SECRET = 'EJlo3ZgTzi7VtLZD6gvezWnD0TX_SpQJtsMJwbVw9caeWBVlRAzv8pjcvN5jBz8jBOBc1pCTskIWg6fz'
PAYPAL_LIVE_MODE = None
PAYPAL_SECURITY_USERID = 'devcolonyworx-facilitator_api1.gmail.com'
PAYPAL_SECURITY_PASSWORD = '4WGRZETEDXPPEHB2'
PAYPAL_SECURITY_SIGNATURE = 'AFcWxV21C7fd0v3bYYYRCpSSRl31A2NqSDH-lLt3zc4UcR0RhEY.-dHj'
# this application-id is the sandbox value, same for everyone
PAYPAL_APPLICATION_ID = 'APP-80W284485P519543T'
PAYPAL_FEE_GENESIS_PERCENT = 10

# account for fee payment
PAYPAL_GENESIS_PAYMENT_ACCOUNT = 'payments-facilitator@colonyworx.com'
PAYPAL_HOST_REDIRECT_URL = 'http://192.168.88.45:8888'

EMAIL_HOST = "mail.colonyworx.com"
EMAIL_HOST_USER = "notify@colonyworx.com"
EMAIL_HOST_PASSWORD = "genSIS2016"
EMAIL_PORT = 587
EMAIL_USE_TLS = False

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_SSL_REDIRECT = True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

# twitter keys
CONSUMER_KEY = "EBSmdQxkgpnX7JbdlGcjgO9nA"
CONSUMER_SECRET = "apBk1ynhlo8RIvyYViFxA8Qz3FfD7PpDbbo5ibQIMZ2SM8zMi4"


RAVEN_CONFIG = {
    'dsn': 'https://b8658ea30a7945e28ca3aec7ffc67337:2e076682b1954949ba01cdeb3999d422@sentry.io/167627',
}

